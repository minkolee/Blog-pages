// 模块
// 将数据解释为代码的不太可怕的方法，是使用 Function 构造器。 它有两个参数：一个包含逗
// 号分隔的参数名称列表的字符串，和一个包含函数体的字符串。 它将代码封装在一个函数值
// 中，以便它获得自己的作用域，并且不会对其他作用域做出奇怪的事情。

// let plusOne = Function("n", "return n + 1;");
// console.log(plusOne(4));

// CommonJS

// 用于连接 JavaScript 模块的最广泛的方法称为 CommonJS 模块。 Node.js 使用它，并且是
// NPM 上大多数包使用的系统。
// CommonJS 模块的主要概念是称为 require 的函数。 当你使用依赖项的模块名称调用这个函
// 数时，它会确保该模块已加载并返回其接口。